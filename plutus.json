{
  "preamble": {
    "title": "jpg-store/marketplace",
    "description": "Aiken contracts for project 'jpg-store/marketplace'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "ask.spend",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/ask~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/ask~1Redeemer"
        }
      },
      "compiledCode": "59064401000032323232323232323232322223232533300a323232323232323232323232323232323232533301c3370e900000089919191919191919191919192999814002099b8848000ccc0040140180204c8c8c8c8c8c8c8c8c8c8c8c8c94ccc0e0c0ec0184c8c8c94ccc0ecc0f80084c8c8c8c94ccc0f14ccc0f14ccc0f0028402452808008a50100214a066e24040008cdc7802a44100375a60760046eb8c0e400458c0f0004dd5981c0011bae30360011630390053375e00c98150d8799fd8799f581c70e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a72ffd8799fd8799fd8799f581c81728e7ed4cf324e1323135e7e6d931f01e30792d9cdf17129cb806dffffffff003375e002024606c002606c0046eacc0d0004c0d0008c0c8004c0a8010cdc199b83337040029032240c4903219980180080426103d8798000302f006302d005222323232323232323253330323375e0020122646464646464a66607066ebc00c02c4c94ccc0f0c0fc0284c8c8c94ccc0fcc1080084c8c94ccc0f8cdc7802a45001533303e533303e3371200e002266e21200000714a026466e000200054ccc10402c5200013301801300b1616375a607e0046eb8c0f400458c100004dd5981e0011bae303a00116303d00916375a60780026078004607400260640046072016606e0142c606c002606c0046eacc0d0004c0d0008c0c8004c0a8008c0c4010c0bc00cc004004888c8c8c8c8c8c8c8c94ccc0c0cdd7800a6103d8798000132323232323253330363375e006016264a666074607a0142646464a66607a608000426464a66607866e3c015221001533303c533303c3371200e002266e21200000714a026466e000200054ccc0fc02c52000133301701701300b1616375a607a0046eb8c0ec00458c0f8004dd5981d0011bae303800116303b00916375a6074002607400460700026060004606e014606a0122c606800260680046eacc0c8004c0c8008c0c0004c0a0008c0bc00cc0b4008ccc8c0040048894ccc0a800852809919299981498018010a511333005005001003302e003375c605800497ae023300b00d001333232323001001222533302833712900a00089919980200200099b8100248050c8c8c8c8c8c8c8c8c8c0dc004c0d8004c0d4004c0d0004c0cc004c0c8004c0c4004c0c0004c0bc004c0b80084cc010008004c0040048894ccc098cdc3800a4000200426466600800800266e040092002302c0020120063758604e002603e030646466e95200433026375200297ae037280026ecc004c090004c0714ccc078cdc3a4004603a02220222c6eb4c088004c0680504cc008010dd71980c180d009a400460340266002002444a66603e00429404c8c94ccc078cdc78010018a5113330050050010033023003375c60420046eb0c074004c074004c070004c06c004c068004c064004c060008dd6180b000980b000980a800980600198090009809001180800098040018a4c2c6400a6646464464a66601c66e1d200000113232323253330153018002132498cc01c00c8c9263253330143370e9000000899191919299980d980f00109924c64a66603266e1d20000011323232325333020302300213232498c94ccc07ccdc3a400000226464a666048604e0042649319299981119b87480000044c8c94ccc09cc0a80084c926301b0011630280013020002153330223370e90010008991919191919299981598170010a4c2c6eb4c0b0004c0b0008dd6981500098150011bad30280013020002163020001163025001301d0031533301f3370e90010008a999811180e8018a4c2c2c603a00460280062c60420026042004603e002602e0082c602e0062c6eb4c070004c070008c068004c04800858c04800458dd7180b000980b0011bac3014001300c00216300c0013001001222533301000214984c8ccc010010c05000c008c004c0480088c94ccc02ccdc3a400000226464a66602060260042930b1bae301100130090021533300b3370e900100089919299980818098010a4c2c6eb8c044004c02400858c024004010c800cc94ccc024cdc3a400000226464a66601c60220042930b1bad300f0013007003153330093370e90010008a99980618038018a4c2c2c600e0046600200290001111199980399b8700100300c233330050053370000890011807000801001118029baa001230033754002ae6955ceaab9e5573eae815d0aba201",
      "hash": "a3aafef70886a94e2b6b0887930b8d365cc8d4bd0e97467b3d78b16b"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "List$jpg/types/Payout": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/jpg~1types~1Payout"
      }
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "ask/Datum": {
      "title": "Datum",
      "description": "A listing requires a datum that has\n the owner's payment key and a list of payouts.\n We do not need to specify the marketplace payout\n in `payouts` even though it will be in\n one of the outputs.",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payouts",
              "description": "Does not contain the marketplace payout.\n This is usually royalty and seller payouts.",
              "$ref": "#/definitions/List$jpg~1types~1Payout"
            },
            {
              "title": "owner",
              "description": "Flexible to allow discounts\n The key that listed the NFT",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "ask/Redeemer": {
      "title": "Redeemer",
      "description": "A user can either buy a token\n or cancel/update the listing.",
      "anyOf": [
        {
          "title": "Buy",
          "description": "`payout_outputs_offset` tells us where\n the outputs containing the payouts start.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payout_outputs_offset",
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "WithdrawOrUpdate",
          "description": "Cancel or update a listing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "jpg/types/Payout": {
      "title": "Payout",
      "anyOf": [
        {
          "title": "Payout",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "address",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "amount_lovelace",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    }
  }
}