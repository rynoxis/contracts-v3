{
  "preamble": {
    "title": "jpg-store/marketplace",
    "description": "Aiken contracts for project 'jpg-store/marketplace'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "ask.spend",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/ask~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/ask~1Redeemer"
        }
      },
      "compiledCode": "59059101000032323232323232323232322223232533300a323232323232323232323232323232323232533301c3370e90000008991919191919191919191919192999814a99981499b8700548000400c5280999800802003804899191929998160008999802001005260103d879800014a0646464646464646464a66606e607400c2646464a666074607a004264646464a666076a666076a66607601420122940400452808010a50533303a01413371202c004266e1c0092080897a3371e00a910100375a60740046eb8c0e000458c0ec004dd5981b8011bae30350011630380053375e00c98150d8799fd8799f581c70e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a72ffd8799fd8799fd8799f581c81728e7ed4cf324e1323135e7e6d931f01e30792d9cdf17129cb806dffffffff003375e002022606a002606a0046eacc0cc004c0cc008c0c4004c0a4008c0c0014c0b8010c0040048888c8c8c8c8c8c8c8c94ccc0cccdd780080489919191919191919299981f1820805899191929998209822001099191919192999821a999821a99982180508018a50100214a0200229414ccc1140385288999980d80d80b007260103d87980003371201200466e3c01522100375a60820046eb8c0fc00458c108004dd5981f0011bae303c00116303f00a3375e0060166eb4c0f4004c0f4008c0ec004c0cc008c0e802cc0e0028528181b800981b8011bab303500130350023033001302b002303200430300033300c00e4891c70e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a7200333232323001001222533302a33712900a00089919980200200099b8100248050c8c8c8c8c8c8c8c8c8c0e4004c0e0004c0dc004c0d8004c0d4004c0d0004c0cc004c0c8004c0c4004c0c00084cc010008004c0040048894ccc0a0cdc3800a4000200426466600800800266e040092002302e002014008375a605200260520046eb0c09c004c07c060c8c8cdd2a40086604c6ea40052f5c06e50004dd98009812000980e299980f19b8748008c074044404458dd69811000980d00a0998010021bae33018301a01348010c06804cc0040048894ccc07c00852809919299980f19b8f00200314a2266600a00a00200660460066eb8c084008dd6180e800980e800980e000980d800980d000980c800980c0011bac301600130160013015001300c0033012001301200230100013008003149858c8014cc8c8c88c94ccc038cdc3a40000022646464646464a66602e6034004264931980480291924c64a66602c66e1d2000001132323232533301d3020002132498c94ccc06ccdc3a4000002264646464a666044604a004264649319299981099b87480000044c8c94ccc098c0a40084c9263253330243370e9000000899192999814981600109924c603a0022c605400260440042a66604866e1d20020011323232323232533302d3030002149858dd6981700098170011bad302c001302c002375a605400260440042c60440022c604e002603e0062a66604266e1d200200115333024301f00314985858c07c008c05800c58c08c004c08c008c084004c06401058c06400c58dd6980f000980f001180e000980a0010b180a0008b1bae30180013018002375a602c002602c0046eb0c050004c03000858c030004c0040048894ccc040008526132333004004301400300230013012002232533300b3370e900000089919299980818098010a4c2c6eb8c044004c02400854ccc02ccdc3a400400226464a66602060260042930b1bae30110013009002163009001004320033253330093370e900000089919299980718088010a4c2c6eb4c03c004c01c00c54ccc024cdc3a40040022a666018600e0062930b0b180380119800800a40004444666600e66e1c00400c0308cccc014014cdc000224004601c0020040044600a6ea80048c00cdd5000ab9a5573aaae7955cfaba05742ae89",
      "hash": "985e0aee9f86b98d96fd998103fb3ad8ce3404ad5c5fdb8bf6582888"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "List$jpg/types/Payout": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/jpg~1types~1Payout"
      }
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "ask/Datum": {
      "title": "Datum",
      "description": "A listing requires a datum that has\n the owner's payment key and a list of payouts.\n The optional `reserver_for` allows for peer to peer\n trading where the buyer must match the\n private buyer payment key. Since the datum expects\n a marketplace fee, we do not need to specify the\n marketplace payout in `payouts` even though it will\n be in one of the outputs.",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payouts",
              "description": "Does not contain the marketplace payout.\n This is usually royalty and seller payouts.",
              "$ref": "#/definitions/List$jpg~1types~1Payout"
            },
            {
              "title": "marketplace_fee",
              "description": "Flexible to allow discounts",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "owner",
              "description": "The key that listed the NFT",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "ask/Redeemer": {
      "title": "Redeemer",
      "description": "A user can either buy a token\n or cancel/update the listing.",
      "anyOf": [
        {
          "title": "Buy",
          "description": "`payout_outputs_offset` tells us where\n the outputs containing the payouts start.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payout_outputs_offset",
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "WithdrawOrUpdate",
          "description": "Cancel or update a listing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "jpg/types/Payout": {
      "title": "Payout",
      "anyOf": [
        {
          "title": "Payout",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "address",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "amount_lovelace",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    }
  }
}